/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree.
 */

syntax = "proto3";

package tensorpipe.proto;

message SpontaneousConnection {}

message RequestedConnection {
  uint64 registration_id = 1;
}

message TransportAdvertisement {
  string domain_descriptor = 1;
}

message ChannelAdvertisement {
  string domain_descriptor = 1;
}

message Brochure {
  map<string, TransportAdvertisement> transport_advertisement = 1;
  map<string, ChannelAdvertisement> channel_advertisement = 2;
}

message ChannelSelection {
  uint64 registration_id = 1;
}

message BrochureAnswer {
  string transport = 1;
  string address = 2;
  uint64 registration_id = 3;

  map<string, ChannelSelection> channel_selection = 4;
}

enum DeviceType {
  DEVICE_TYPE_UNSPECIFIED = 0;
  DEVICE_TYPE_CPU = 1;
}

message MessageDescriptor {
  message TensorDescriptor {
    DeviceType device_type = 1;
    int64 size_in_bytes = 2;

    string channel_name = 3;
    bytes channel_descriptor = 4;

    bytes user_data = 5;
  }

  int64 size_in_bytes = 1;
  repeated TensorDescriptor tensor_descriptors = 2;
}

message Packet {
  oneof type {
    SpontaneousConnection spontaneous_connection = 1;
    RequestedConnection requested_connection = 2;
    Brochure brochure = 3;
    BrochureAnswer brochure_answer = 4;
    MessageDescriptor message_descriptor = 5;
  }
}

message BasicChannelOperation {
  uint64 operation_id = 1;
  uint64 size_in_bytes = 2;
}

message BasicChannelPacket {
  oneof type {
    BasicChannelOperation request = 1;
    BasicChannelOperation reply = 2;
  }
}
